openapi: 3.0.0
info:
  title: User & Role API
  version: 1.0.0
  description: API documentation for User and Role management
servers:
  - url: http://localhost:3000
    description: Development Server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          example: admin@example.com
        password:
          type: string
          format: password
          example: admin123
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

paths:

  /api/auth/register:
    post:
      summary: user register (except from admin)
      description: create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  example: "
                password:
                  type: string
                  example: "securepassword"
                role:
                  type: string
                  example: "user"
      responses:
        '201':
          description: User created successfully


  /api/auth/login:
    post:
      summary: Admin Login
      description: Authenticate admin user and return JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
  
  /api/admin/users:
    get:
      summary: Get all users
      description: Requires authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved users
    post:
      summary: Create a new user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  example: "johndoe@example.com"
                password:
                  type: string
                  example: "securepassword"
                role:
                  type: string
                  example: "admin"
      responses:
        '201':
          description: User created successfully

  /api/admin/users/{id}:
    put:
      summary: Update user by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Updated"
                role:
                  type: string
                  example: "admin"
      responses:
        '200':
          description: User updated successfully
    delete:
      summary: Delete user by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully

  /api/role:
    get:
      summary: Get Roles
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved roles
    post:
      summary: Initialize roles
      security:
        - BearerAuth: []
      responses:
        '201':
          description: Roles initialized successfully
